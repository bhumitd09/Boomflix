# Generated by Django 4.2.4 on 2023-08-24 22:29

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('media_server_name', models.CharField(default='The Server', max_length=255, null=True, verbose_name='Media Server Name')),
                ('prefix_keyword', models.CharField(default='!df', max_length=255, null=True, verbose_name='Chat-Prefix For Requests')),
                ('discord_token', models.CharField(default='', max_length=255, null=True, verbose_name='Discord Token')),
                ('radarr_url', models.CharField(default='', max_length=255, null=True, verbose_name='Radarr Host-Url')),
                ('radarr_token', models.CharField(default='', max_length=255, null=True, verbose_name='Radarr Token')),
                ('sonarr_url', models.CharField(default='', max_length=255, null=True, verbose_name='Sonarr Host-Url')),
                ('sonarr_token', models.CharField(default='', max_length=255, null=True, verbose_name='Sonarr Token')),
                ('session_timeout', models.IntegerField(default=60, null=True, verbose_name='Session Timeout')),
                ('max_check_time', models.IntegerField(default=600, null=True, verbose_name='Monitoring Timeout (Seconds)')),
                ('max_results', models.IntegerField(default=0, null=True, verbose_name='Max Search Results')),
                ('max_seasons_for_non_admin', models.IntegerField(default=0, null=True, verbose_name='Max Seasons For Non-Admin')),
                ('is_verbose_logging', models.BooleanField(default=False, verbose_name='Verbose logging in console')),
                ('is_debug', models.BooleanField(default=False, verbose_name='Send Debug Message On Error')),
                ('is_radarr_enabled', models.BooleanField(default=True, verbose_name='Enable Radarr Requests')),
                ('is_sonarr_enabled', models.BooleanField(default=True, verbose_name='Enable Sonarr Requests')),
                ('is_trailers_enabled', models.BooleanField(default=True, verbose_name='Enable YouTube Trailers')),
            ],
        ),
        migrations.CreateModel(
            name='DiscordServer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('server_name', models.CharField(max_length=255, null=True)),
                ('server_id', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='ErrLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('entry', models.CharField(default='Error Occured', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='EventLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('entry', models.CharField(default='Event Occured', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='Media',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=255, null=True)),
                ('overview', models.TextField(null=True)),
                ('poster_url', models.CharField(max_length=255, null=True)),
                ('year', models.IntegerField(null=True)),
                ('path', models.CharField(max_length=255, null=True)),
                ('monitored', models.BooleanField(null=True)),
                ('runtime', models.IntegerField(null=True)),
                ('added', models.CharField(max_length=255, null=True)),
                ('season_count', models.IntegerField(null=True)),
                ('network', models.CharField(max_length=255, null=True)),
                ('air_time', models.CharField(max_length=255, null=True)),
                ('tvdb_id', models.IntegerField(null=True)),
                ('imdb_id', models.IntegerField(null=True)),
                ('first_aired', models.CharField(max_length=255, null=True)),
                ('series_type', models.CharField(max_length=255, null=True)),
                ('in_theaters', models.CharField(max_length=255, null=True)),
                ('website_url', models.CharField(max_length=255, null=True)),
                ('trailer_url', models.CharField(max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaRequest',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('orig_message', models.CharField(default='', max_length=255, null=True)),
                ('orig_parsed_title', models.CharField(default='', max_length=255, null=True)),
                ('orig_parsed_type', models.CharField(default='', max_length=255, null=True)),
                ('status', models.BooleanField(default=False, null=True)),
                ('made_in', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='DiscoFlixClient.discordserver')),
                ('media', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='requests', to='DiscoFlixClient.media')),
            ],
        ),
        migrations.CreateModel(
            name='State',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('discord_state', models.BooleanField(default=False)),
                ('app_state', models.BooleanField(default=True)),
                ('current_activity', models.CharField(default='Offline', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('added', models.DateTimeField(auto_now_add=True)),
                ('is_admin', models.BooleanField(default=False)),
                ('is_server_restricted', models.BooleanField(default=False)),
                ('username', models.TextField(null=True)),
                ('is_additional_settings', models.BooleanField(default=False)),
                ('is_server_owner', models.BooleanField(default=False)),
                ('session_timeout', models.IntegerField(default=60)),
                ('max_check_time', models.IntegerField(default=600)),
                ('max_results', models.IntegerField(default=0)),
                ('max_seasons_for_non_admin', models.IntegerField(default=0)),
                ('max_requests_in_day', models.IntegerField(default=0)),
                ('discord_servers', models.ManyToManyField(related_name='users', to='DiscoFlixClient.discordserver')),
                ('requests', models.ManyToManyField(related_name='users', to='DiscoFlixClient.mediarequest')),
            ],
        ),
    ]
